{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jean\\\\color-palette-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nfunction getPaletteFromUrl() {\n  const params = new URLSearchParams(window.location.search);\n  const colors = params.get('colors');\n  if (colors) {\n    return colors.split('-').map(c => '#' + c);\n  }\n  return null;\n}\n\n// Paletas populares y monocromáticas predefinidas\nconst POPULAR_PALETTES = [['#FF6F61', '#6B5B95', '#88B04B', '#F7CAC9', '#92A8D1'], ['#034F84', '#F7786B', '#DEEAEE', '#B1CBBB', '#F7CAC9'], ['#955251', '#B565A7', '#009B77', '#DD4124', '#D65076'], ['#45B8AC', '#EFC050', '#5B5EA6', '#9B2335', '#DFCFBE'], ['#6B5B95', '#FF6F61', '#88B04B', '#F7CAC9', '#955251']];\nconst MONOCHROME_PALETTES = [['#22223B', '#4A4E69', '#9A8C98', '#C9ADA7', '#F2E9E4'], ['#0D1B2A', '#1B263B', '#415A77', '#778DA9', '#E0E1DD'], ['#232526', '#414345', '#636363', '#A2A2A2', '#E0E0E0'], ['#2D3142', '#4F5D75', '#BFC0C0', '#FFFFFF', '#EF8354'], ['#22223B', '#3A3A5D', '#5C5C8A', '#7E7EB7', '#AFAFD4']];\nfunction App() {\n  _s();\n  // Estado principal\n  const [numColors, setNumColors] = useState(5);\n  const [colors, setColors] = useState(() => getPaletteFromUrl() || Array.from({\n    length: 5\n  }, getRandomColor));\n  const [savedPalettes, setSavedPalettes] = useState(() => JSON.parse(localStorage.getItem('palettes') || '[]'));\n  const [imageColors, setImageColors] = useState([]);\n  const [copiedIdx, setCopiedIdx] = useState(null);\n  const fileInputRef = useRef();\n\n  // Cambiar cantidad de colores\n  const handleNumColorsChange = e => {\n    const value = Math.max(1, Math.min(20, Number(e.target.value)));\n    setNumColors(value);\n    setColors(Array.from({\n      length: value\n    }, (_, i) => colors[i] || getRandomColor()));\n  };\n\n  // Generar paleta aleatoria\n  const generatePalette = () => {\n    setColors(Array.from({\n      length: numColors\n    }, getRandomColor));\n  };\n\n  // Cambiar color individual\n  const handleColorChange = (index, newColor) => {\n    const newColors = [...colors];\n    newColors[index] = newColor;\n    setColors(newColors);\n  };\n\n  // Copiar color al portapapeles con tooltip\n  const copyToClipboard = (color, idx) => {\n    navigator.clipboard.writeText(color);\n    setCopiedIdx(idx);\n    setTimeout(() => setCopiedIdx(null), 1200);\n  };\n\n  // Guardar paleta en localStorage\n  const savePalette = () => {\n    const newPalettes = [...savedPalettes, colors];\n    setSavedPalettes(newPalettes);\n    localStorage.setItem('palettes', JSON.stringify(newPalettes));\n  };\n\n  // Exportar paleta como JSON\n  const exportAsJSON = () => {\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(colors));\n    const dlAnchorElem = document.createElement('a');\n    dlAnchorElem.setAttribute('href', dataStr);\n    dlAnchorElem.setAttribute('download', 'palette.json');\n    dlAnchorElem.click();\n  };\n\n  // Exportar paleta como imagen (PNG)\n  const exportAsImage = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 60 * colors.length;\n    canvas.height = 60;\n    const ctx = canvas.getContext('2d');\n    colors.forEach((color, i) => {\n      ctx.fillStyle = color;\n      ctx.fillRect(i * 60, 0, 60, 60);\n    });\n    canvas.toBlob(blob => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'palette.png';\n      a.click();\n      URL.revokeObjectURL(url);\n    });\n  };\n\n  // Compartir paleta por enlace\n  const sharePalette = () => {\n    const colorString = colors.map(c => c.replace('#', '')).join('-');\n    const url = `${window.location.origin}${window.location.pathname}?colors=${colorString}`;\n    navigator.clipboard.writeText(url);\n    alert('¡Enlace copiado al portapapeles!');\n  };\n\n  // Extraer colores de una imagen (simple, usando canvas)\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const img = new window.Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      const data = ctx.getImageData(0, 0, img.width, img.height).data;\n      const colorMap = {};\n      for (let i = 0; i < data.length; i += 4) {\n        const rgb = `${data[i]},${data[i + 1]},${data[i + 2]}`;\n        colorMap[rgb] = (colorMap[rgb] || 0) + 1;\n      }\n      // Tomar los colores más frecuentes\n      const sorted = Object.entries(colorMap).sort((a, b) => b[1] - a[1]);\n      const topColors = sorted.slice(0, numColors).map(([rgb]) => {\n        const [r, g, b] = rgb.split(',');\n        return `#${(+r).toString(16).padStart(2, '0')}${(+g).toString(16).padStart(2, '0')}${(+b).toString(16).padStart(2, '0')}`;\n      });\n      setImageColors(topColors);\n      setColors(topColors);\n    };\n  };\n\n  // Cargar paleta guardada\n  const loadPalette = palette => {\n    setNumColors(palette.length);\n    setColors(palette);\n  };\n\n  // Eliminar paleta guardada\n  const deletePalette = idx => {\n    const newPalettes = savedPalettes.filter((_, i) => i !== idx);\n    setSavedPalettes(newPalettes);\n    localStorage.setItem('palettes', JSON.stringify(newPalettes));\n  };\n\n  // Cargar paleta popular o monocromática\n  const loadQuickPalette = palette => {\n    setNumColors(palette.length);\n    setColors(palette);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        title: \"Generador de paletas\",\n        children: \" \\uD83C\\uDFA8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-title\",\n        children: \"Generador de Paleta de Colores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-desc\",\n        children: \"Crea, guarda, exporta y comparte paletas de colores para tus proyectos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Cantidad de colores:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"20\",\n          value: numColors,\n          onChange: handleNumColorsChange,\n          style: {\n            width: 50,\n            marginLeft: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePalette,\n        children: \"Generar aleatoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: savePalette,\n        children: \"Guardar paleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportAsJSON,\n        children: \"Exportar JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportAsImage,\n        children: \"Exportar imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sharePalette,\n        children: \"Compartir enlace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fileInputRef.current.click(),\n        children: \"Extraer de imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        style: {\n          display: 'none'\n        },\n        ref: fileInputRef,\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Paletas populares\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-palettes\",\n      children: POPULAR_PALETTES.map((palette, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-palette\",\n        children: [palette.map((color, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mini-color\",\n          style: {\n            background: color\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadQuickPalette(palette),\n          children: \"Usar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Paletas monocrom\\xE1ticas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-palettes\",\n      children: MONOCHROME_PALETTES.map((palette, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-palette\",\n        children: [palette.map((color, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mini-color\",\n          style: {\n            background: color\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadQuickPalette(palette),\n          children: \"Usar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: \"60\",\n        viewBox: `0 0 ${colors.length * 80} 60`,\n        style: {\n          maxWidth: '600px',\n          margin: '0 auto',\n          display: 'block'\n        },\n        children: colors.map((color, idx) => /*#__PURE__*/_jsxDEV(\"rect\", {\n          x: idx * 80,\n          y: 0,\n          width: 80,\n          height: 60,\n          fill: color\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette\",\n      children: colors.map((color, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `color-block${copiedIdx === idx ? ' copied' : ''}`,\n        style: {\n          background: color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => handleColorChange(idx, e.target.value),\n          className: \"color-picker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-code\",\n          children: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-btn\",\n          onClick: () => copyToClipboard(color, idx),\n          children: \"Copiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tooltip\",\n          children: \"\\xA1Copiado!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Paletas guardadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-palettes\",\n      children: [savedPalettes.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay paletas guardadas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 40\n      }, this), savedPalettes.map((palette, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-palette\",\n        children: [palette.map((color, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mini-color\",\n          style: {\n            background: color\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadPalette(palette),\n          children: \"Cargar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePalette(idx),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [\"Hecho con \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#ffb347'\n        },\n        children: \"\\u2764\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }, this), \" por tu asistente IA. Inspirado en \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://paletadecolores.com.mx/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"paletadecolores.com.mx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z9Ix7+FrnU7MEnliv/cXsDOkgf4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","getRandomColor","letters","color","i","Math","floor","random","getPaletteFromUrl","params","URLSearchParams","window","location","search","colors","get","split","map","c","POPULAR_PALETTES","MONOCHROME_PALETTES","App","_s","numColors","setNumColors","setColors","Array","from","length","savedPalettes","setSavedPalettes","JSON","parse","localStorage","getItem","imageColors","setImageColors","copiedIdx","setCopiedIdx","fileInputRef","handleNumColorsChange","e","value","max","min","Number","target","_","generatePalette","handleColorChange","index","newColor","newColors","copyToClipboard","idx","navigator","clipboard","writeText","setTimeout","savePalette","newPalettes","setItem","stringify","exportAsJSON","dataStr","encodeURIComponent","dlAnchorElem","document","createElement","setAttribute","click","exportAsImage","canvas","width","height","ctx","getContext","forEach","fillStyle","fillRect","toBlob","blob","url","URL","createObjectURL","a","href","download","revokeObjectURL","sharePalette","colorString","replace","join","origin","pathname","alert","handleImageUpload","file","files","img","Image","src","onload","drawImage","data","getImageData","colorMap","rgb","sorted","Object","entries","sort","b","topColors","slice","r","g","toString","padStart","loadPalette","palette","deletePalette","filter","loadQuickPalette","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","marginLeft","onClick","current","accept","display","ref","background","viewBox","maxWidth","margin","x","y","fill","rel","_c","$RefreshReg$"],"sources":["C:/Users/Jean/color-palette-generator/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction getPaletteFromUrl() {\n  const params = new URLSearchParams(window.location.search);\n  const colors = params.get('colors');\n  if (colors) {\n    return colors.split('-').map(c => '#' + c);\n  }\n  return null;\n}\n\n// Paletas populares y monocromáticas predefinidas\nconst POPULAR_PALETTES = [\n  ['#FF6F61', '#6B5B95', '#88B04B', '#F7CAC9', '#92A8D1'],\n  ['#034F84', '#F7786B', '#DEEAEE', '#B1CBBB', '#F7CAC9'],\n  ['#955251', '#B565A7', '#009B77', '#DD4124', '#D65076'],\n  ['#45B8AC', '#EFC050', '#5B5EA6', '#9B2335', '#DFCFBE'],\n  ['#6B5B95', '#FF6F61', '#88B04B', '#F7CAC9', '#955251'],\n];\nconst MONOCHROME_PALETTES = [\n  ['#22223B', '#4A4E69', '#9A8C98', '#C9ADA7', '#F2E9E4'],\n  ['#0D1B2A', '#1B263B', '#415A77', '#778DA9', '#E0E1DD'],\n  ['#232526', '#414345', '#636363', '#A2A2A2', '#E0E0E0'],\n  ['#2D3142', '#4F5D75', '#BFC0C0', '#FFFFFF', '#EF8354'],\n  ['#22223B', '#3A3A5D', '#5C5C8A', '#7E7EB7', '#AFAFD4'],\n];\n\nfunction App() {\n  // Estado principal\n  const [numColors, setNumColors] = useState(5);\n  const [colors, setColors] = useState(() => getPaletteFromUrl() || Array.from({ length: 5 }, getRandomColor));\n  const [savedPalettes, setSavedPalettes] = useState(() => JSON.parse(localStorage.getItem('palettes') || '[]'));\n  const [imageColors, setImageColors] = useState([]);\n  const [copiedIdx, setCopiedIdx] = useState(null);\n  const fileInputRef = useRef();\n\n  // Cambiar cantidad de colores\n  const handleNumColorsChange = (e) => {\n    const value = Math.max(1, Math.min(20, Number(e.target.value)));\n    setNumColors(value);\n    setColors(Array.from({ length: value }, (_, i) => colors[i] || getRandomColor()));\n  };\n\n  // Generar paleta aleatoria\n  const generatePalette = () => {\n    setColors(Array.from({ length: numColors }, getRandomColor));\n  };\n\n  // Cambiar color individual\n  const handleColorChange = (index, newColor) => {\n    const newColors = [...colors];\n    newColors[index] = newColor;\n    setColors(newColors);\n  };\n\n  // Copiar color al portapapeles con tooltip\n  const copyToClipboard = (color, idx) => {\n    navigator.clipboard.writeText(color);\n    setCopiedIdx(idx);\n    setTimeout(() => setCopiedIdx(null), 1200);\n  };\n\n  // Guardar paleta en localStorage\n  const savePalette = () => {\n    const newPalettes = [...savedPalettes, colors];\n    setSavedPalettes(newPalettes);\n    localStorage.setItem('palettes', JSON.stringify(newPalettes));\n  };\n\n  // Exportar paleta como JSON\n  const exportAsJSON = () => {\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(colors));\n    const dlAnchorElem = document.createElement('a');\n    dlAnchorElem.setAttribute('href', dataStr);\n    dlAnchorElem.setAttribute('download', 'palette.json');\n    dlAnchorElem.click();\n  };\n\n  // Exportar paleta como imagen (PNG)\n  const exportAsImage = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 60 * colors.length;\n    canvas.height = 60;\n    const ctx = canvas.getContext('2d');\n    colors.forEach((color, i) => {\n      ctx.fillStyle = color;\n      ctx.fillRect(i * 60, 0, 60, 60);\n    });\n    canvas.toBlob(blob => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'palette.png';\n      a.click();\n      URL.revokeObjectURL(url);\n    });\n  };\n\n  // Compartir paleta por enlace\n  const sharePalette = () => {\n    const colorString = colors.map(c => c.replace('#', '')).join('-');\n    const url = `${window.location.origin}${window.location.pathname}?colors=${colorString}`;\n    navigator.clipboard.writeText(url);\n    alert('¡Enlace copiado al portapapeles!');\n  };\n\n  // Extraer colores de una imagen (simple, usando canvas)\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const img = new window.Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      const data = ctx.getImageData(0, 0, img.width, img.height).data;\n      const colorMap = {};\n      for (let i = 0; i < data.length; i += 4) {\n        const rgb = `${data[i]},${data[i+1]},${data[i+2]}`;\n        colorMap[rgb] = (colorMap[rgb] || 0) + 1;\n      }\n      // Tomar los colores más frecuentes\n      const sorted = Object.entries(colorMap).sort((a, b) => b[1] - a[1]);\n      const topColors = sorted.slice(0, numColors).map(([rgb]) => {\n        const [r, g, b] = rgb.split(',');\n        return `#${(+r).toString(16).padStart(2, '0')}${(+g).toString(16).padStart(2, '0')}${(+b).toString(16).padStart(2, '0')}`;\n      });\n      setImageColors(topColors);\n      setColors(topColors);\n    };\n  };\n\n  // Cargar paleta guardada\n  const loadPalette = (palette) => {\n    setNumColors(palette.length);\n    setColors(palette);\n  };\n\n  // Eliminar paleta guardada\n  const deletePalette = (idx) => {\n    const newPalettes = savedPalettes.filter((_, i) => i !== idx);\n    setSavedPalettes(newPalettes);\n    localStorage.setItem('palettes', JSON.stringify(newPalettes));\n  };\n\n  // Cargar paleta popular o monocromática\n  const loadQuickPalette = (palette) => {\n    setNumColors(palette.length);\n    setColors(palette);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"header-logo\" title=\"Generador de paletas\"> 🎨</div>\n        <div className=\"header-title\">Generador de Paleta de Colores</div>\n        <div className=\"header-desc\">Crea, guarda, exporta y comparte paletas de colores para tus proyectos.</div>\n      </div>\n      <div className=\"controls\">\n        <label>\n          Cantidad de colores:\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"20\"\n            value={numColors}\n            onChange={handleNumColorsChange}\n            style={{ width: 50, marginLeft: 8 }}\n          />\n        </label>\n        <button onClick={generatePalette}>Generar aleatoria</button>\n        <button onClick={savePalette}>Guardar paleta</button>\n        <button onClick={exportAsJSON}>Exportar JSON</button>\n        <button onClick={exportAsImage}>Exportar imagen</button>\n        <button onClick={sharePalette}>Compartir enlace</button>\n        <button onClick={() => fileInputRef.current.click()}>Extraer de imagen</button>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          style={{ display: 'none' }}\n          ref={fileInputRef}\n          onChange={handleImageUpload}\n        />\n      </div>\n\n      {/* Paletas populares */}\n      <h2>Paletas populares</h2>\n      <div className=\"quick-palettes\">\n        {POPULAR_PALETTES.map((palette, idx) => (\n          <div key={idx} className=\"quick-palette\">\n            {palette.map((color, i) => (\n              <span key={i} className=\"mini-color\" style={{ background: color }}></span>\n            ))}\n            <button onClick={() => loadQuickPalette(palette)}>Usar</button>\n          </div>\n        ))}\n      </div>\n\n      {/* Paletas monocromáticas */}\n      <h2>Paletas monocromáticas</h2>\n      <div className=\"quick-palettes\">\n        {MONOCHROME_PALETTES.map((palette, idx) => (\n          <div key={idx} className=\"quick-palette\">\n            {palette.map((color, i) => (\n              <span key={i} className=\"mini-color\" style={{ background: color }}></span>\n            ))}\n            <button onClick={() => loadQuickPalette(palette)}>Usar</button>\n          </div>\n        ))}\n      </div>\n\n      {/* Previsualización de la paleta como imagen */}\n      <div className=\"palette-preview\">\n        <svg width=\"100%\" height=\"60\" viewBox={`0 0 ${colors.length * 80} 60`} style={{maxWidth:'600px',margin:'0 auto',display:'block'}}>\n          {colors.map((color, idx) => (\n            <rect key={idx} x={idx*80} y={0} width={80} height={60} fill={color} />\n          ))}\n        </svg>\n      </div>\n\n      {/* Paleta principal */}\n      <div className=\"palette\">\n        {colors.map((color, idx) => (\n          <div key={idx} className={`color-block${copiedIdx === idx ? ' copied' : ''}`} style={{ background: color }}>\n            <input\n              type=\"color\"\n              value={color}\n              onChange={e => handleColorChange(idx, e.target.value)}\n              className=\"color-picker\"\n            />\n            <span className=\"color-code\">{color}</span>\n            <button className=\"copy-btn\" onClick={() => copyToClipboard(color, idx)}>\n              Copiar\n            </button>\n            <span className=\"tooltip\">¡Copiado!</span>\n          </div>\n        ))}\n      </div>\n\n      {/* Paletas guardadas */}\n      <h2>Paletas guardadas</h2>\n      <div className=\"saved-palettes\">\n        {savedPalettes.length === 0 && <p>No hay paletas guardadas.</p>}\n        {savedPalettes.map((palette, idx) => (\n          <div key={idx} className=\"saved-palette\">\n            {palette.map((color, i) => (\n              <span key={i} className=\"mini-color\" style={{ background: color }}></span>\n            ))}\n            <button onClick={() => loadPalette(palette)}>Cargar</button>\n            <button onClick={() => deletePalette(idx)}>Eliminar</button>\n          </div>\n        ))}\n      </div>\n      <div className=\"footer\">\n        Hecho con <span style={{color:'#ffb347'}}>❤</span> por tu asistente IA. Inspirado en <a href=\"https://paletadecolores.com.mx/\" target=\"_blank\" rel=\"noopener noreferrer\">paletadecolores.com.mx</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}