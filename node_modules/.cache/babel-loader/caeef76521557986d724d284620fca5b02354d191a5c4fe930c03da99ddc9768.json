{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jean\\\\color-palette-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nfunction getPaletteFromUrl() {\n  const params = new URLSearchParams(window.location.search);\n  const colors = params.get('colors');\n  if (colors) {\n    return colors.split('-').map(c => '#' + c);\n  }\n  return null;\n}\nfunction App() {\n  _s();\n  // Estado principal\n  const [numColors, setNumColors] = useState(5);\n  const [colors, setColors] = useState(() => getPaletteFromUrl() || Array.from({\n    length: 5\n  }, getRandomColor));\n  const [savedPalettes, setSavedPalettes] = useState(() => JSON.parse(localStorage.getItem('palettes') || '[]'));\n  const [imageColors, setImageColors] = useState([]);\n  const fileInputRef = useRef();\n\n  // Cambiar cantidad de colores\n  const handleNumColorsChange = e => {\n    const value = Math.max(1, Math.min(20, Number(e.target.value)));\n    setNumColors(value);\n    setColors(Array.from({\n      length: value\n    }, (_, i) => colors[i] || getRandomColor()));\n  };\n\n  // Generar paleta aleatoria\n  const generatePalette = () => {\n    setColors(Array.from({\n      length: numColors\n    }, getRandomColor));\n  };\n\n  // Cambiar color individual\n  const handleColorChange = (index, newColor) => {\n    const newColors = [...colors];\n    newColors[index] = newColor;\n    setColors(newColors);\n  };\n\n  // Copiar color al portapapeles\n  const copyToClipboard = color => {\n    navigator.clipboard.writeText(color);\n  };\n\n  // Guardar paleta en localStorage\n  const savePalette = () => {\n    const newPalettes = [...savedPalettes, colors];\n    setSavedPalettes(newPalettes);\n    localStorage.setItem('palettes', JSON.stringify(newPalettes));\n  };\n\n  // Exportar paleta como JSON\n  const exportAsJSON = () => {\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(colors));\n    const dlAnchorElem = document.createElement('a');\n    dlAnchorElem.setAttribute('href', dataStr);\n    dlAnchorElem.setAttribute('download', 'palette.json');\n    dlAnchorElem.click();\n  };\n\n  // Exportar paleta como imagen (PNG)\n  const exportAsImage = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 60 * colors.length;\n    canvas.height = 60;\n    const ctx = canvas.getContext('2d');\n    colors.forEach((color, i) => {\n      ctx.fillStyle = color;\n      ctx.fillRect(i * 60, 0, 60, 60);\n    });\n    canvas.toBlob(blob => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'palette.png';\n      a.click();\n      URL.revokeObjectURL(url);\n    });\n  };\n\n  // Compartir paleta por enlace\n  const sharePalette = () => {\n    const colorString = colors.map(c => c.replace('#', '')).join('-');\n    const url = `${window.location.origin}${window.location.pathname}?colors=${colorString}`;\n    navigator.clipboard.writeText(url);\n    alert('¡Enlace copiado al portapapeles!');\n  };\n\n  // Extraer colores de una imagen (simple, usando canvas)\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const img = new window.Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      const data = ctx.getImageData(0, 0, img.width, img.height).data;\n      const colorMap = {};\n      for (let i = 0; i < data.length; i += 4) {\n        const rgb = `${data[i]},${data[i + 1]},${data[i + 2]}`;\n        colorMap[rgb] = (colorMap[rgb] || 0) + 1;\n      }\n      // Tomar los colores más frecuentes\n      const sorted = Object.entries(colorMap).sort((a, b) => b[1] - a[1]);\n      const topColors = sorted.slice(0, numColors).map(([rgb]) => {\n        const [r, g, b] = rgb.split(',');\n        return `#${(+r).toString(16).padStart(2, '0')}${(+g).toString(16).padStart(2, '0')}${(+b).toString(16).padStart(2, '0')}`;\n      });\n      setImageColors(topColors);\n      setColors(topColors);\n    };\n  };\n\n  // Cargar paleta guardada\n  const loadPalette = palette => {\n    setNumColors(palette.length);\n    setColors(palette);\n  };\n\n  // Eliminar paleta guardada\n  const deletePalette = idx => {\n    const newPalettes = savedPalettes.filter((_, i) => i !== idx);\n    setSavedPalettes(newPalettes);\n    localStorage.setItem('palettes', JSON.stringify(newPalettes));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generador de Paleta de Colores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Cantidad de colores:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"20\",\n          value: numColors,\n          onChange: handleNumColorsChange,\n          style: {\n            width: 50,\n            marginLeft: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePalette,\n        children: \"Generar aleatoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: savePalette,\n        children: \"Guardar paleta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportAsJSON,\n        children: \"Exportar JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportAsImage,\n        children: \"Exportar imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sharePalette,\n        children: \"Compartir enlace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fileInputRef.current.click(),\n        children: \"Extraer de imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        style: {\n          display: 'none'\n        },\n        ref: fileInputRef,\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette\",\n      children: colors.map((color, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-block\",\n        style: {\n          background: color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => handleColorChange(idx, e.target.value),\n          className: \"color-picker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"color-code\",\n          children: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-btn\",\n          onClick: () => copyToClipboard(color),\n          children: \"Copiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Paletas guardadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-palettes\",\n      children: [savedPalettes.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay paletas guardadas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 40\n      }, this), savedPalettes.map((palette, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-palette\",\n        children: [palette.map((color, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mini-color\",\n          style: {\n            background: color\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadPalette(palette),\n          children: \"Cargar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePalette(idx),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ReimGCVDeWfbQxP22+9NBoDkTSE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","getRandomColor","letters","color","i","Math","floor","random","getPaletteFromUrl","params","URLSearchParams","window","location","search","colors","get","split","map","c","App","_s","numColors","setNumColors","setColors","Array","from","length","savedPalettes","setSavedPalettes","JSON","parse","localStorage","getItem","imageColors","setImageColors","fileInputRef","handleNumColorsChange","e","value","max","min","Number","target","_","generatePalette","handleColorChange","index","newColor","newColors","copyToClipboard","navigator","clipboard","writeText","savePalette","newPalettes","setItem","stringify","exportAsJSON","dataStr","encodeURIComponent","dlAnchorElem","document","createElement","setAttribute","click","exportAsImage","canvas","width","height","ctx","getContext","forEach","fillStyle","fillRect","toBlob","blob","url","URL","createObjectURL","a","href","download","revokeObjectURL","sharePalette","colorString","replace","join","origin","pathname","alert","handleImageUpload","file","files","img","Image","src","onload","drawImage","data","getImageData","colorMap","rgb","sorted","Object","entries","sort","b","topColors","slice","r","g","toString","padStart","loadPalette","palette","deletePalette","idx","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","marginLeft","onClick","current","accept","display","ref","background","_c","$RefreshReg$"],"sources":["C:/Users/Jean/color-palette-generator/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction getPaletteFromUrl() {\n  const params = new URLSearchParams(window.location.search);\n  const colors = params.get('colors');\n  if (colors) {\n    return colors.split('-').map(c => '#' + c);\n  }\n  return null;\n}\n\nfunction App() {\n  // Estado principal\n  const [numColors, setNumColors] = useState(5);\n  const [colors, setColors] = useState(() => getPaletteFromUrl() || Array.from({ length: 5 }, getRandomColor));\n  const [savedPalettes, setSavedPalettes] = useState(() => JSON.parse(localStorage.getItem('palettes') || '[]'));\n  const [imageColors, setImageColors] = useState([]);\n  const fileInputRef = useRef();\n\n  // Cambiar cantidad de colores\n  const handleNumColorsChange = (e) => {\n    const value = Math.max(1, Math.min(20, Number(e.target.value)));\n    setNumColors(value);\n    setColors(Array.from({ length: value }, (_, i) => colors[i] || getRandomColor()));\n  };\n\n  // Generar paleta aleatoria\n  const generatePalette = () => {\n    setColors(Array.from({ length: numColors }, getRandomColor));\n  };\n\n  // Cambiar color individual\n  const handleColorChange = (index, newColor) => {\n    const newColors = [...colors];\n    newColors[index] = newColor;\n    setColors(newColors);\n  };\n\n  // Copiar color al portapapeles\n  const copyToClipboard = (color) => {\n    navigator.clipboard.writeText(color);\n  };\n\n  // Guardar paleta en localStorage\n  const savePalette = () => {\n    const newPalettes = [...savedPalettes, colors];\n    setSavedPalettes(newPalettes);\n    localStorage.setItem('palettes', JSON.stringify(newPalettes));\n  };\n\n  // Exportar paleta como JSON\n  const exportAsJSON = () => {\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(colors));\n    const dlAnchorElem = document.createElement('a');\n    dlAnchorElem.setAttribute('href', dataStr);\n    dlAnchorElem.setAttribute('download', 'palette.json');\n    dlAnchorElem.click();\n  };\n\n  // Exportar paleta como imagen (PNG)\n  const exportAsImage = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 60 * colors.length;\n    canvas.height = 60;\n    const ctx = canvas.getContext('2d');\n    colors.forEach((color, i) => {\n      ctx.fillStyle = color;\n      ctx.fillRect(i * 60, 0, 60, 60);\n    });\n    canvas.toBlob(blob => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'palette.png';\n      a.click();\n      URL.revokeObjectURL(url);\n    });\n  };\n\n  // Compartir paleta por enlace\n  const sharePalette = () => {\n    const colorString = colors.map(c => c.replace('#', '')).join('-');\n    const url = `${window.location.origin}${window.location.pathname}?colors=${colorString}`;\n    navigator.clipboard.writeText(url);\n    alert('¡Enlace copiado al portapapeles!');\n  };\n\n  // Extraer colores de una imagen (simple, usando canvas)\n  const handleImageUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const img = new window.Image();\n    img.src = URL.createObjectURL(file);\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      const data = ctx.getImageData(0, 0, img.width, img.height).data;\n      const colorMap = {};\n      for (let i = 0; i < data.length; i += 4) {\n        const rgb = `${data[i]},${data[i+1]},${data[i+2]}`;\n        colorMap[rgb] = (colorMap[rgb] || 0) + 1;\n      }\n      // Tomar los colores más frecuentes\n      const sorted = Object.entries(colorMap).sort((a, b) => b[1] - a[1]);\n      const topColors = sorted.slice(0, numColors).map(([rgb]) => {\n        const [r, g, b] = rgb.split(',');\n        return `#${(+r).toString(16).padStart(2, '0')}${(+g).toString(16).padStart(2, '0')}${(+b).toString(16).padStart(2, '0')}`;\n      });\n      setImageColors(topColors);\n      setColors(topColors);\n    };\n  };\n\n  // Cargar paleta guardada\n  const loadPalette = (palette) => {\n    setNumColors(palette.length);\n    setColors(palette);\n  };\n\n  // Eliminar paleta guardada\n  const deletePalette = (idx) => {\n    const newPalettes = savedPalettes.filter((_, i) => i !== idx);\n    setSavedPalettes(newPalettes);\n    localStorage.setItem('palettes', JSON.stringify(newPalettes));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Generador de Paleta de Colores</h1>\n      <div className=\"controls\">\n        <label>\n          Cantidad de colores:\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"20\"\n            value={numColors}\n            onChange={handleNumColorsChange}\n            style={{ width: 50, marginLeft: 8 }}\n          />\n        </label>\n        <button onClick={generatePalette}>Generar aleatoria</button>\n        <button onClick={savePalette}>Guardar paleta</button>\n        <button onClick={exportAsJSON}>Exportar JSON</button>\n        <button onClick={exportAsImage}>Exportar imagen</button>\n        <button onClick={sharePalette}>Compartir enlace</button>\n        <button onClick={() => fileInputRef.current.click()}>Extraer de imagen</button>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          style={{ display: 'none' }}\n          ref={fileInputRef}\n          onChange={handleImageUpload}\n        />\n      </div>\n      <div className=\"palette\">\n        {colors.map((color, idx) => (\n          <div key={idx} className=\"color-block\" style={{ background: color }}>\n            <input\n              type=\"color\"\n              value={color}\n              onChange={e => handleColorChange(idx, e.target.value)}\n              className=\"color-picker\"\n            />\n            <span className=\"color-code\">{color}</span>\n            <button className=\"copy-btn\" onClick={() => copyToClipboard(color)}>\n              Copiar\n            </button>\n          </div>\n        ))}\n      </div>\n      <h2>Paletas guardadas</h2>\n      <div className=\"saved-palettes\">\n        {savedPalettes.length === 0 && <p>No hay paletas guardadas.</p>}\n        {savedPalettes.map((palette, idx) => (\n          <div key={idx} className=\"saved-palette\">\n            {palette.map((color, i) => (\n              <span key={i} className=\"mini-color\" style={{ background: color }}></span>\n            ))}\n            <button onClick={() => loadPalette(palette)}>Cargar</button>\n            <button onClick={() => deletePalette(idx)}>Eliminar</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}